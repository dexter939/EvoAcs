# ===================================
# ACS (Auto Configuration Server)
# Environment Configuration Template
# ===================================

# ----------------------------------
# Application Settings
# ----------------------------------
APP_NAME="ACS System"
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

# Localization
APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

# Maintenance
APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

# PHP Server
PHP_CLI_SERVER_WORKERS=4

# Security
BCRYPT_ROUNDS=12

# ----------------------------------
# Logging Configuration
# ----------------------------------
LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# ----------------------------------
# Database Configuration (PostgreSQL)
# Production: Use PostgreSQL for 100K+ devices
# Development: SQLite OK for testing
# ----------------------------------

# PostgreSQL (Recommended for Production)
DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=acs_database
DB_USERNAME=acs_user
DB_PASSWORD=change_me_in_production

# SQLite (Development Only)
# DB_CONNECTION=sqlite
# DB_DATABASE=/absolute/path/to/database.sqlite

# ----------------------------------
# Session & Cache Configuration
# ----------------------------------
SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local

# Cache (Database or Redis recommended)
CACHE_STORE=database
# CACHE_PREFIX=acs_

# ----------------------------------
# Queue System (Laravel Horizon)
# ----------------------------------
# Use Redis for production queue processing
QUEUE_CONNECTION=redis
# QUEUE_CONNECTION=database  # Alternative for development

# ----------------------------------
# Redis Configuration
# Required for: Queue (Horizon), WebSocket routing, Cache
# ----------------------------------
REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379
REDIS_DB=0

# ----------------------------------
# Mail Configuration
# ----------------------------------
MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="noreply@acs.local"
MAIL_FROM_NAME="${APP_NAME}"

# ----------------------------------
# AWS S3 (Optional - Firmware Storage)
# ----------------------------------
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

# ----------------------------------
# ACS API Configuration
# ----------------------------------
# API Key for RESTful endpoints (/api/v1/*)
# ⚠️ CHANGE IN PRODUCTION - Used for device/admin API access
ACS_API_KEY=acs-secret-key-change-in-production

# ----------------------------------
# TR-069 (CWMP) Configuration
# ----------------------------------
# TR-069 endpoint: /tr069
TR069_ENABLED=true
TR069_SESSION_TIMEOUT=300
TR069_MAX_ENVELOPE_SIZE=32768

# Connection Request Authentication
TR069_CONNECTION_USERNAME=admin
TR069_CONNECTION_PASSWORD=admin123

# ----------------------------------
# TR-369 (USP) Protocol Configuration
# ----------------------------------
# USP Controller Endpoint ID (BBF TR-369 spec)
USP_CONTROLLER_ENDPOINT_ID=proto::acs-controller

# Default device registration values
USP_DEFAULT_OUI=000000
USP_DEFAULT_PRODUCT_CLASS="USP Device"

# ----------------------------------
# MQTT Transport Layer (MTP)
# ----------------------------------
# MQTT Broker for USP device communication
# Development: Use test.mosquitto.org or local broker
# Production: Use dedicated broker (Mosquitto, VerneMQ, EMQX)

MQTT_HOST=test.mosquitto.org
MQTT_PORT=1883
MQTT_CLIENT_ID=acs-controller
MQTT_USERNAME=
MQTT_PASSWORD=

# MQTT Connection Settings
MQTT_CLEAN_SESSION=true
MQTT_ENABLE_LOGGING=true
MQTT_CONNECT_TIMEOUT=60
MQTT_SOCKET_TIMEOUT=5
MQTT_KEEP_ALIVE_INTERVAL=10
MQTT_RESEND_TIMEOUT=10

# MQTT Topics (USP Standard - BBF TR-369)
# Controller subscribes to: usp/controller/{endpoint_id}/#
# Agents publish to: usp/agent/{device_endpoint_id}/request

# ----------------------------------
# WebSocket Transport Layer (MTP)
# ----------------------------------
# WebSocket server for direct device connections
USP_WEBSOCKET_ENABLED=true
USP_WEBSOCKET_HOST=0.0.0.0
USP_WEBSOCKET_PORT=9000

# WebSocket Security (Production)
# USP_WEBSOCKET_SSL=true
# USP_WEBSOCKET_CERT_PATH=/path/to/cert.pem
# USP_WEBSOCKET_KEY_PATH=/path/to/key.pem

# WebSocket Heartbeat
USP_WEBSOCKET_PING_INTERVAL=30
USP_WEBSOCKET_TIMEOUT=90

# ----------------------------------
# HTTP Transport Layer (MTP)
# ----------------------------------
# HTTP polling endpoint for USP devices: POST /usp
USP_HTTP_ENABLED=true
USP_HTTP_REQUEST_TIMEOUT=3600
USP_HTTP_MAX_PENDING_REQUESTS=1000

# ----------------------------------
# Background Daemons Configuration
# ----------------------------------
# These services should run as background processes:
# - php artisan usp:mqtt-subscribe      (MQTT listener)
# - php artisan usp:websocket-server    (WebSocket server)
# - php artisan horizon                 (Queue worker)

# Daemon restart policy
DAEMON_AUTO_RESTART=true
DAEMON_MAX_RESTARTS=5

# ----------------------------------
# Performance & Scalability
# ----------------------------------
# Queue workers (Laravel Horizon)
HORIZON_WORKERS=5
HORIZON_MAX_PROCESSES=10
HORIZON_TIMEOUT=600

# Database connection pool
DB_POOL_MIN=2
DB_POOL_MAX=20

# Rate limiting (requests per minute)
API_RATE_LIMIT=60
DEVICE_RATE_LIMIT=1000

# ----------------------------------
# Monitoring & Metrics (Optional)
# ----------------------------------
# Prometheus metrics endpoint
METRICS_ENABLED=false
METRICS_PORT=9091

# Sentry error tracking
SENTRY_LARAVEL_DSN=
SENTRY_TRACES_SAMPLE_RATE=1.0

# ----------------------------------
# Development Tools
# ----------------------------------
VITE_APP_NAME="${APP_NAME}"

# Telescope (Laravel debugging - disable in production)
TELESCOPE_ENABLED=false

# Horizon Dashboard (disable in production or use auth)
HORIZON_DOMAIN=localhost
HORIZON_PATH=horizon

# ----------------------------------
# Security Headers
# ----------------------------------
# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=*
# CORS_ALLOWED_ORIGINS=https://admin.example.com,https://dashboard.example.com

# Trusted proxies (for load balancer)
TRUSTED_PROXIES=
# TRUSTED_PROXIES=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# ----------------------------------
# Multi-Tenant Configuration (Future)
# ----------------------------------
# MULTI_TENANT_ENABLED=false
# DEFAULT_ORGANIZATION_ID=1
