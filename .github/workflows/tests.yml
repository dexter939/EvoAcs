name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: acs_test
          POSTGRES_USER: acs_user
          POSTGRES_PASSWORD: acs_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_pgsql, soap, redis, protobuf
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Setup database schema
        env:
          DATABASE_URL: postgresql://acs_user:acs_pass@localhost:5432/acs_test
        run: |
          if [ -f "package.json" ] && grep -q "db:push" package.json; then
            npm install
            npm run db:push --force || echo "No db:push script found, skipping"
          fi

      - name: Run PHPUnit tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          ACS_API_KEY: test-api-key-for-ci
        run: vendor/bin/phpunit --coverage-clover=coverage/clover.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/clover.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run Laravel Pint
        run: vendor/bin/pint --test
