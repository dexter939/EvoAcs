upstream acs_backend {
    server 127.0.0.1:5000 weight=1 max_fails=3 fail_timeout=30s;
    # Add more backend servers for load balancing:
    # server 127.0.0.1:5001 weight=1 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:5002 weight=1 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name acs.example.com;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name acs.example.com;
    
    root /var/www/acs/public;
    index index.php;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/acs.crt;
    ssl_certificate_key /etc/ssl/private/acs.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Logging
    access_log /var/log/nginx/acs-access.log;
    error_log /var/log/nginx/acs-error.log;
    
    # Increase timeout for long-running operations
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    
    # Client body size (for firmware uploads)
    client_max_body_size 100M;
    
    # Rate limiting for API endpoints
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=device_limit:10m rate=1000r/m;
    
    # TR-069 CWMP endpoint
    location /tr069 {
        limit_req zone=device_limit burst=50 nodelay;
        
        proxy_pass http://acs_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # SOAP specific
        proxy_set_header SOAPAction $http_soapaction;
    }
    
    # TR-369 USP endpoint
    location /usp {
        limit_req zone=device_limit burst=50 nodelay;
        
        proxy_pass http://acs_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # Binary content
        proxy_set_header Content-Type application/octet-stream;
    }
    
    # RESTful API endpoints
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://acs_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
    }
    
    # Web dashboard
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        
        proxy_pass http://acs_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
    }
    
    # Static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Deny access to sensitive files
    location ~ /\.(?!well-known).* {
        deny all;
    }
    
    location ~ /\.env {
        deny all;
    }
}

# WebSocket Proxy (separate port)
upstream websocket_backend {
    server 127.0.0.1:9000;
}

server {
    listen 9001 ssl http2;
    listen [::]:9001 ssl http2;
    server_name acs.example.com;
    
    # SSL Configuration (same as above)
    ssl_certificate /etc/ssl/certs/acs.crt;
    ssl_certificate_key /etc/ssl/private/acs.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # WebSocket proxying
    location / {
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
}
